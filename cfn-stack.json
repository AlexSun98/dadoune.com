{
	"AWSTemplateFormatVersion": "2010-09-09",
	"Description": "Static Site Stack",
	"Parameters": {
		"DomainName": {
			"Description": "The site domain name.",
			"Type": "String",
			"AllowedPattern": "(?!-)[a-zA-Z0-9-.]{1,63}(?<![.-])",
			"ConstraintDescription": "Must be a valid domain name."
		},
		"GitHubOwner": {
			"Description": "GitHub account username.",
			"Type": "String"
		},
		"GitHubRepo": {
			"Description": "Static site repo name.",
			"Type": "String"
		},
		"GitHubBranch": {
			"Description": "The branch that will trigger build/deploy.",
			"Type": "String",
			"Default": "master"
		},
		"GitHubOAuthToken": {
			"Description": "OAuth or personal access token.",
			"Type": "String",
			"NoEcho": true
		},
		"S3ArtifactLocation": {
			"Description": "S3 location for pipeline artifact storage.",
			"Type": "String"
		},
		"StaticSiteBucketName": {
			"Description": "The static site bucket.",
			"Type": "String"
		},
		"StaticSiteBucketRegion": {
			"Description": "The static site bucket.",
			"Type": "String",
			"Default": "us-east-1",
			"AllowedValues": ["us-east-1", "us-east-2", "us-west-1", "us-west-2", "ca-central-1", "ap-south-1", "ap-northeast-2", "ap-southeast-1", "ap-southeast-2", "ap-northeast-1", "eu-central-1", "eu-west-1 ", "eu-west-2 ", "sa-east-1"]
		}
	},
	"Mappings" : {
		"S3WebsiteMap" : {
			"us-east-1":      {"endpoint": "s3-website-us-east-1.amazonaws.com"},
			"us-east-2":      {"endpoint": "s3-website.us-east-2.amazonaws.com"},
			"us-west-1":      {"endpoint": "s3-website-us-west-1.amazonaws.com"},
			"us-west-2":      {"endpoint": "s3-website-us-west-2.amazonaws.com"},
			"ca-central-1":   {"endpoint": "s3-website.ca-central-1.amazonaws.com"},
			"ap-south-1":     {"endpoint": "s3-website.ap-south-1.amazonaws.com"},
			"ap-northeast-2": {"endpoint": "s3-website.ap-northeast-2.amazonaws.com"},
			"ap-southeast-1": {"endpoint": "s3-website-ap-southeast-1.amazonaws.com"},
			"ap-southeast-2": {"endpoint": "s3-website-ap-southeast-2.amazonaws.com"},
			"ap-northeast-1": {"endpoint": "s3-website-ap-northeast-1.amazonaws.com"},
			"eu-central-1":   {"endpoint": "s3-website.eu-central-1.amazonaws.com"},
			"eu-west-1":      {"endpoint": "s3-website-eu-west-1.amazonaws.com"},
			"eu-west-2":      {"endpoint": "s3-website.eu-west-2.amazonaws.com"},
			"sa-east-1":      {"endpoint": "s3-website-sa-east-1.amazonaws.com"}
		}
	},
	"Resources": {
		"SSLCertificate": {
			"Type": "AWS::CertificateManager::Certificate",
			"Properties": {
				"DomainName": {"Ref": "DomainName"},
				"SubjectAlternativeNames": [{"Fn::Sub": "www.${DomainName}"}],
				"DomainValidationOptions": [{
					"DomainName": {"Ref": "DomainName"},
					"ValidationDomain": {"Ref": "DomainName"}
				}, {
					"DomainName": {"Fn::Sub": "www.${DomainName}"},
					"ValidationDomain": {"Ref": "DomainName"}
				}]
			}
		},
		"CodeBuildRole": {
			"Type": "AWS::IAM::Role",
			"Properties": {
				"AssumeRolePolicyDocument": {
					"Statement": [{
						"Sid": "",
						"Effect": "Allow",
						"Principal": {
							"Service": ["codebuild.amazonaws.com"]
						},
						"Action": "sts:AssumeRole"
					}]
				},
				"Path": "/"
			}
		},
		"CodeBuildRolePolicy": {
			"Type": "AWS::IAM::Policy",
			"Properties": {
				"PolicyName": "CodeBuildRolePolicy",
				"PolicyDocument": {
					"Statement": [{
						"Effect": "Allow",
						"Resource": [
							{"Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*"}
						],
						"Action": [
							"logs:CreateLogGroup",
							"logs:CreateLogStream",
							"logs:PutLogEvents"
						]
					}, {
						"Effect": "Allow",
						"Resource": [
							{"Fn::Sub": "arn:aws:s3:::${S3ArtifactLocation}"},
							{"Fn::Sub": "arn:aws:s3:::${StaticSiteBucketName}"},
							{"Fn::Sub": "arn:aws:s3:::${StaticSiteBucketName}/*"}
						],
						"Action": [
							"s3:*"
						]
					}]
				},
				"Roles": [{"Ref": "CodeBuildRole"}]
			}
		},
		"CodeBuild": {
			"Type": "AWS::CodeBuild::Project",
			"Properties": {
				"Artifacts": {
					"Type": "CODEPIPELINE"
				},
				"Environment": {
					"ComputeType": "BUILD_GENERAL1_SMALL",
					"Image": "aws/codebuild/ubuntu-base:14.04",
					"Type": "LINUX_CONTAINER",
					"EnvironmentVariables": [{
						"Name": "BUCKET_NAME",
						"Value": {"Ref": "StaticSiteBucketName"}
					}]
				},
				"Name": {"Fn::Sub": "${AWS::StackName}-StaticSiteBuilder"},
				"ServiceRole": {"Ref": "CodeBuildRole"},
				"Source": {
					"Type": "CODEPIPELINE"
				},
				"Tags": [{
					"Key": "Stack",
					"Value": {"Ref": "AWS::StackName"}
				}],
				"TimeoutInMinutes": 10
			}
		},
		"CodePipelineRole": {
			"Type": "AWS::IAM::Role",
			"Properties": {
				"AssumeRolePolicyDocument": {
					"Statement": [{
						"Sid": "",
						"Effect": "Allow",
						"Principal": {
							"Service": ["codepipeline.amazonaws.com"]
						},
						"Action": "sts:AssumeRole"
					}]
				},
				"Path": "/"
			}
		},
		"CodePipelineRolePolicy": {
			"Type": "AWS::IAM::Policy",
			"Properties": {
				"PolicyName": "CodePipelineRolePolicy",
				"PolicyDocument": {
					"Statement": [{
						"Action": [
							"s3:GetObject",
							"s3:GetObjectVersion",
							"s3:GetBucketVersioning"
						],
						"Resource": "*",
						"Effect": "Allow"
					}, {
						"Action": [
							"s3:PutObject"
						],
						"Resource": [
							"arn:aws:s3:::codepipeline*"
						],
						"Effect": "Allow"
					}, {
						"Action": [
							"codebuild:BatchGetBuilds",
							"codebuild:StartBuild"
						],
						"Resource": "*",
						"Effect": "Allow"
					}]
				},
				"Roles": [{"Ref": "CodePipelineRole"}]
			}
		},
		"CodePipeline": {
			"Type": "AWS::CodePipeline::Pipeline",
			"Properties": {
				"RoleArn": {"Fn::GetAtt": ["CodePipelineRole", "Arn"] },
				"Stages": [{
					"Name": "Source",
					"Actions": [{
						"Name": "SourceAction",
						"ActionTypeId": {
							"Category": "Source",
							"Owner": "ThirdParty",
							"Version": "1",
							"Provider": "GitHub"
						},
						"OutputArtifacts": [{
							"Name": "StaticSiteSource"
						}],
						"Configuration": {
							"Owner": {"Ref": "GitHubOwner"},
							"Repo": {"Ref": "GitHubRepo"},
							"Branch": {"Ref": "GitHubBranch"},
							"OAuthToken": {"Ref": "GitHubOAuthToken"}
						},
						"RunOrder": 1
					}]
				}, {
					"Name": "Build",
					"Actions": [{
						"Name": "CodeBuild",
						"InputArtifacts": [{
							"Name": "StaticSiteSource"
						}],
						"ActionTypeId": {
							"Category": "Build",
							"Owner": "AWS",
							"Version": "1",
							"Provider": "CodeBuild"
						},
						"OutputArtifacts": [{
							"Name": "StaticSite"
						}],
						"Configuration": {
							"ProjectName": {"Ref": "CodeBuild"}
						},
						"RunOrder": 1
					}]
				}],
				"ArtifactStore": {
					"Type": "S3",
					"Location": {"Ref": "S3ArtifactLocation"}
				}
			}
		},
		"CloudFront": {
			"Type": "AWS::CloudFront::Distribution",
			"Properties": {
				"DistributionConfig": {
					"Aliases": [
						{"Ref": "DomainName"},
						{"Fn::Sub": "www.${DomainName}"}
					],
					"CacheBehaviors": [{
						"AllowedMethods": ["GET", "HEAD", "OPTIONS"],
						"CachedMethods": ["GET", "HEAD", "OPTIONS"],
						"Compress": true,
						"ForwardedValues": {
							"QueryString": false,
							"Cookies": {"Forward": "none"},
							"Headers": []
						},
						"DefaultTTL": 86400,
						"MinTTL": 86400,
						"MaxTTL": 31536000,
						"ViewerProtocolPolicy": "redirect-to-https",
						"PathPattern": "assets/*",
						"SmoothStreaming": false,
						"TargetOriginId": "S3Bucket"
					}],
					"DefaultCacheBehavior": {
						"AllowedMethods": ["GET", "HEAD", "OPTIONS"],
						"CachedMethods": ["HEAD", "GET", "OPTIONS"],
						"Compress": true,
						"TargetOriginId": "S3Bucket",
						"ForwardedValues": {
							"QueryString": false,
							"Cookies": {"Forward": "none"},
							"Headers": []
						},
						"DefaultTTL": 0,
						"MinTTL": 0,
						"MaxTTL": 31536000,
						"SmoothStreaming": false,
						"ViewerProtocolPolicy": "redirect-to-https"
					},
					"Enabled": true,
					"Origins": [{
						"DomainName": {"Fn::Sub": ["${StaticSiteBucketName}.${Endpoint}", {
							"Endpoint": {"Fn::FindInMap": ["S3WebsiteMap", {"Ref": "StaticSiteBucketRegion"}, "endpoint"]}}
						]},
						"Id": "S3Bucket",
						"CustomOriginConfig": {
							"HTTPPort": 80,
							"OriginProtocolPolicy": "http-only"
						}
					}],
					"PriceClass": "PriceClass_All",
					"ViewerCertificate": {
						"SslSupportMethod": "sni-only",
						"AcmCertificateArn": {"Ref" : "SSLCertificate"}
					}
				}
			}
		}
	},
	"Outputs": {

	}
}
